name: CI/CD - Alquiladora Romero Client

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]

permissions:
  contents: write # Necesario para github-pages-deploy-action

jobs:
  # ------------------------------------
  # Job 1: Lint, Formato y Seguridad 🔒
  # ------------------------------------
  lint-audit:
    name: Lint, Formato y Seguridad
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código fuente 🛎️
        uses: actions/checkout@v4

      - name: Configurar Node.js 20 con caché ⚙️
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Instalar dependencias 📦
        run: npm ci

      - name: Ejecutar ESLint (Revisión de código) ✨
        run: npm run lint # CORREGIDO: Falla si hay errores

      - name: Verificar formato con Prettier 💅
        run: npm run format:check # CORREGIDO: Falla si el formato no es correcto

      - name: Revisar Vulnerabilidades (npm audit) 🛡️
        run: npm audit --audit-level=high # Falla con vulnerabilidades altas/críticas

  # ------------------------------------------
  # Job 2: Pruebas Unitarias + Cobertura 🧪📉
  # ------------------------------------------
  pruebas-unitarias:
    name: Pruebas Unitarias y Cobertura
    runs-on: ubuntu-latest
    needs: lint-audit # Depende del job anterior
    steps:
      - name: Checkout código fuente 🛎️
        uses: actions/checkout@v4

      - name: Configurar Node.js 20 con caché ⚙️
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Instalar dependencias 📦
        run: npm ci

      - name: Ejecutar Pruebas Unitarias con Cobertura 📊
        run: npm test -- --coverage --watchAll=false # CORREGIDO: Falla si los tests fallan
        env:
          NODE_ENV: test
          CI: true

      - name: Subir reporte de cobertura como artefacto 📄
        uses: actions/upload-artifact@v4
        with:
          name: reporte-cobertura-unitaria
          path: coverage

  # --------------------------------------
  # Job 3: Pruebas de Integración 🧩🤝
  # --------------------------------------
  pruebas-integracion:
    name: Pruebas de Integración
    runs-on: ubuntu-latest
    needs: pruebas-unitarias # Depende de las unitarias
    steps:
      - name: Checkout código fuente 🛎️
        uses: actions/checkout@v4

      - name: Configurar Node.js 20 con caché ⚙️
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Instalar dependencias 📦
        run: npm ci

      - name: Ejecutar Pruebas de Integración ⚙️🔗
        run: npm test -- --testPathPattern="**/*.integration.test.{js,jsx}" --watchAll=false # CORREGIDO: Falla si los tests fallan
        env:
          NODE_ENV: test
          CI: true

  # ---------------------------------------------
  # Job 4: Deploy a GitHub Pages 🚀🌐
  # ---------------------------------------------
  deploy:
    name: Deploy a GitHub Pages
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: pruebas-integracion # Depende directamente del último job de pruebas
    steps:
      - name: Checkout código fuente 🛎️
        uses: actions/checkout@v4

      - name: Configurar Node.js 20 con caché ⚙️
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Instalar dependencias 📦
        run: npm ci

      - name: Construir aplicación ignorando Warnings (Build) 🏗️⚠️
        # --- CAMBIO CLAVE AQUÍ ---
        # CI=false evita que react-scripts trate warnings como errores
        run: CI=false npm run build
        env:
          # NODE_ENV: production # No es necesario, 'npm run build' lo establece por defecto
          PUBLIC_URL: /Alquiladora-romero # Necesario para GitHub Pages

      - name: Desplegar a rama gh-pages 🚀
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build
          branch: gh-pages
          clean: true